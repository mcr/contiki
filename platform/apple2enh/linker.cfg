# This file should be identical to the file '<cc65>/doc/apple2.cfg' with the
# following exceptions:
# - Reduced stacksize: Contiki is designed to use extremely little stack.
#   The applications coming with Contiki run even with a $100 byte stack.
# - Expanded RAM size: Allow applications to overlay BASIC.SYSTEM if needed.
#   In that case the binary must be loaded with the ProDOS 8 loader available
#   at: ftp://ftp.musoftware.de/pub/uz/cc65/contrib/loader-1.2.zip

FEATURES {
    STARTADDRESS: default = $0800;
}
MEMORY {
    ZP:     start = $0080, size = $001A,      define = yes;
    HEADER: start = $0000, size = $0004,      file = %O;
    RAM:    start = %S,    size = $BF00 - %S, file = %O; # $BF00 instead of $9600
}
SEGMENTS {
    EXEHDR:   load = HEADER, type = ro;
    STARTUP:  load = RAM,    type = ro, define = yes;
    LOWCODE:  load = RAM,    type = ro,               optional = yes;
    INIT:     load = RAM,    type = ro, define = yes, optional = yes;
    CODE:     load = RAM,    type = ro;
    RODATA:   load = RAM,    type = ro;
    DATA:     load = RAM,    type = rw;
    BSS:      load = RAM,    type = bss, define = yes;
    HEAP:     load = RAM,    type = bss, optional = yes; # must sit just below stack
    ZEROPAGE: load = ZP,     type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type    = constructor,
	    label   = __CONSTRUCTOR_TABLE__,
	    count   = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = destructor,
	    label   = __DESTRUCTOR_TABLE__,
	    count   = __DESTRUCTOR_COUNT__;
    CONDES: type    = interruptor,
	    segment = RODATA,
	    label   = __INTERRUPTOR_TABLE__,
	    count   = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
    __STACKSIZE__ = $200;	# 1/2K instead of 2K stack
}
